{"version":3,"sources":["Components/MainPage/MainPage.js","Components/EpisodeThumb/EpisodeThumb.js","utilities.js","Components/EpisodeDisplay/EpisodeDisplay.js","API/apiCalls.js","Components/MovieThumb/MovieThumb.js","Components/MovieDisplay/MovieDisplay.js","Components/ErrorPage/ErrorPage.js","Components/App/App.js","index.js"],"names":["MainPage","className","to","aria-label","data-value","EpisodeThumb","props","data","title","aired","video_url","episode_id","id","loadLinks","href","target","rel","data-testid","date","dateInfo","splitDate","substr","split","formatDate","EpisodeDisplay","season","useParams","useState","episodes","setEpisodes","getSeasons","useCallback","criteria","url","determineFetch","fetch","then","response","json","clean","rawData","map","cleanEpisodeData","useEffect","generateLoadingContent","length","episode","index","capFirstLetter","charAt","toUpperCase","slice","formatTitle","loadContent","content","generateSeasonFive","MovieThumb","image_url","rated","start_date","synopsis","mal_id","src","alt","MovieDisplay","movies","setMovies","filterData","results","filter","result","type","includes","movie","ErrorPage","App","exact","path","component","router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0662eddf.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainPage.scss\";\n\nconst MainPage = () => {\n  return (\n    <div className=\"div-bg\">\n      <div className=\"season-div\">\n        <Link className=\"link\" to=\"/season1\" aria-label=\"season-one-navigation\">\n          <article className=\"season-card\" data-value=\"season-1\">\n            Season 1\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season2\" aria-label=\"season-two-navigation\">\n          <article className=\"season-card\" data-value=\"season-2\">\n            Season 2\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season3\" aria-label=\"season-three-navigation\">\n          <article className=\"season-card\" data-value=\"season-3\">\n            Season 3\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season4\" aria-label=\"season-four-navigation\">\n          <article className=\"season-card\" data-value=\"season-4\">\n            Season 4\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season5\" aria-label=\"season-five-navigation\">\n          <article className=\"season-card\" data-value=\"season-5\">\n            Season 5\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/movies\" aria-label=\"movies-navigation\">\n          <article className=\"season-card\" data-value=\"movies\">\n            Movies\n          </article>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./EpisodeThumb.scss\";\nimport { formatDate } from \"../../utilities\";\n\nconst EpisodeThumb = (props) => {\n  const { title, aired, video_url, episode_id, id } = props.data;\n\n  const generateLink = () => {\n    const externalSite = (\n      <a\n        className=\"external-link\"\n        href={video_url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        data-testid={episode_id}\n      >\n        More Details...\n      </a>\n    );\n    const decideLink = !video_url ? <p className=\"nolink\">No additional details</p> : externalSite;\n    return decideLink;\n  };\n\n  const loadLinks = generateLink();\n\n  const date = formatDate(aired);\n\n  return (\n    <article className=\"episode-thumb\">\n      <p className=\"episode-id\">Episode #{id}</p>\n      <h1>{title}</h1>\n      <p>Aired on: {date}</p>\n      {loadLinks}\n    </article>\n  );\n};\n\nexport default EpisodeThumb;\n\nEpisodeThumb.propTypes = {\n  title: PropTypes.string,\n  aired: PropTypes.string,\n  video_url: PropTypes.string,\n  episode_id: PropTypes.number,\n  id: PropTypes.number,\n};\n","export const cleanEpisodeData = (rawData) => {\n  if (!rawData.episodes) {\n    return;\n  }\n  const cleanData = rawData.episodes.map((data) => {\n    return {\n      title: data.title,\n      aired: data.aired,\n      video_url: data.video_url,\n      episode_id: data.episode_id,\n    };\n  });\n  return cleanData;\n};\n\nexport const filterMovieResults = (rawData) => {\n  return rawData.results.filter((result) => {\n    return (\n      result.type === \"Movie\" &&\n      result.title.includes(\"Boku\") &&\n      result.start_date\n    );\n  });\n};\n\nexport const cleanMovieData = (dirtyData) => {\n  return dirtyData.map((data) => {\n    return {\n      image_url: data.image_url,\n      rated: data.rated,\n      start_date: data.start_date,\n      synopsis: data.synopsis,\n      url: data.url,\n      title: data.title,\n      mal_id: data.mal_id,\n    };\n  });\n};\n\nexport const formatTitle = (title) => {\n  const capFirstLetter = title.charAt(0).toUpperCase() + title.slice(1);\n  const date =\n    capFirstLetter.slice(0, 6) +\n    \" \" +\n    capFirstLetter.slice(capFirstLetter.length - 1);\n  return date;\n};\n\nexport const formatDate = (dateInfo) => {\n  if (!dateInfo) {\n    return `Missing Date`;\n  }\n  const isolateDate = dateInfo.substr(0, 10);\n  const splitDate = isolateDate.split(\"-\");\n  const date = `${splitDate[1]}/${splitDate[2]}/${splitDate[0]}`;\n  return date;\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { fetchSeasons } from \"../../API/apiCalls\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport EpisodeThumb from \"../EpisodeThumb/EpisodeThumb\";\nimport { cleanEpisodeData, formatTitle } from \"../../utilities\";\nimport \"./EpisodeDisplay.scss\";\n\nconst EpisodeDisplay = () => {\n  let { season } = useParams();\n\n  const determineFetch = (url) => {\n    switch (url) {\n      case \"season1\":\n        return \"31964\";\n      case \"season2\":\n        return \"33486\";\n      case \"season3\":\n        return \"36456\";\n      case \"season4\":\n        return \"38408\";\n      case \"season5\":\n        return \"41587\";\n      default:\n    }\n  };\n\n  const [episodes, setEpisodes] = useState([]);\n\n  const getSeasons = useCallback(() => {\n    fetchSeasons(determineFetch(season)).then((data) => {\n      const clean = cleanEpisodeData(data);\n      setEpisodes(clean);\n    });\n  }, [season]);\n\n  useEffect(() => {\n    getSeasons();\n  }, [getSeasons]);\n\n  const generateEpisodeThumbs = () => {\n    return episodes.map((episode, index) => {\n      return (\n        <EpisodeThumb\n          key={episode.episode_id}\n          data={{ ...episode, id: index + 1 }}\n        />\n      );\n    });\n  };\n\n  const generateLoadingContent = () => {\n    if (!episodes) {\n      return <Redirect to=\"/error\" />;\n    } else if (episodes.length > 0) {\n      return generateEpisodeThumbs();\n    } else {\n      return <h1>Loading...</h1>;\n    }\n  };\n\n  const generateSeasonFive = () => {\n    const content = generateLoadingContent();\n    const comingSoon = <p className=\"coming-soon\">Coming Soon...<br />March 27th, 2021</p>;\n    const decideSeason = season === \"season5\" ? comingSoon : content;\n    return decideSeason;\n  };\n\n  const title = formatTitle(season);\n\n  const loadContent = generateSeasonFive();\n\n  return (\n    <>\n      <h1 className=\"season-title\">{title}</h1>\n      <div className=\"thumb-container\">{loadContent}</div>\n    </>\n  );\n};\n\nexport default EpisodeDisplay;\n","export const fetchSeasons = (criteria) => {\n    return fetch(`https://api.jikan.moe/v3/anime/${criteria}/episodes`)\n                .then(response => response.json())\n};\n\nexport const fetchMovies = () => {\n    return fetch('https://api.jikan.moe/v3/search/anime?q=myheroacademia')\n                .then(response => response.json())\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./MovieThumb.scss\";\n\nconst MovieThumb = (props) => {\n  const {\n    image_url,\n    rated,\n    start_date,\n    synopsis,\n    url,\n    title,\n    mal_id,\n  } = props.data;\n\n  const formatDate = (dateInfo) => {\n    const isolateDate = dateInfo.substr(0, 10);\n    const splitDate = isolateDate.split(\"-\");\n    const date = `${splitDate[1]}/${splitDate[2]}/${splitDate[0]}`;\n    return date;\n  };\n\n  return (\n    <article className=\"movie-wrapper\">\n      <img src={image_url} alt=\"movie poster\" />\n      <div className=\"movie-info\">\n        <p className=\"movie-title\">{title}</p>\n        <p className=\"movie-syn\">\n          Synopsis: <br />\n          {synopsis}\n        </p>\n        <p className=\"rated\">Rated {rated}</p>\n        <p className=\"air-date\">Premiered on {formatDate(start_date)}</p>\n        <a\n          className=\"external-link\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          data-testid={mal_id}\n        >\n          More Details...\n        </a>\n      </div>\n    </article>\n  );\n};\n\nexport default MovieThumb;\n\nMovieThumb.propTypes = {\n  image_url: PropTypes.string,\n  rated: PropTypes.string,\n  start_date: PropTypes.string,\n  synopsis: PropTypes.string,\n  url: PropTypes.string,\n  title: PropTypes.string,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { fetchMovies } from \"../../API/apiCalls\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieDisplay.scss\";\nimport { filterMovieResults, cleanMovieData } from \"../../utilities\";\n\nconst MovieDisplay = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies().then((data) => {\n      const filterData = filterMovieResults(data);\n      const clean = cleanMovieData(filterData);\n      setMovies(clean);\n    });\n  }, []);\n\n  const generateMovieThumbs = () => {\n    return movies.map((movie, index) => {\n      return <MovieThumb key={index} data={movie} />;\n    });\n  };\n\n  return <section className=\"movie-section\">{generateMovieThumbs()}</section>;\n};\n\nexport default MovieDisplay;\n","import React from \"react\";\nimport \"./ErrorPage.scss\";\n\nconst ErrorPage = () => {\n  return (\n    <div className=\"error\">\n      <p>Page Not Found</p>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React from \"react\";\nimport MainPage from \"../MainPage/MainPage\";\nimport \"./App.scss\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport EpisodeDisplay from \"../EpisodeDisplay/EpisodeDisplay\";\nimport MovieDisplay from \"../MovieDisplay/MovieDisplay\";\nimport ErrorPage from \"../ErrorPage/ErrorPage\";\n\nconst App = () => {\n  return (\n    <>\n      <Link className=\"title-link\" to=\"/\">\n        <h1 className=\"title\">\n          <span className=\"title-span\">ANIMEtrics</span>\n          <br />\n          <span className=\"sub-title\">For My Hero Academia Fanatics</span>\n        </h1>\n      </Link>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route exact path=\"/animetrics\" component={MainPage} />\n        <Route exact path=\"/movies\" component={MovieDisplay} />\n        <Route exact path=\"/error\" component={ErrorPage} />\n        <Route path=\"/:season\" component={EpisodeDisplay} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './Components/App/App';\n\nconst router = <BrowserRouter><App /></BrowserRouter>\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}