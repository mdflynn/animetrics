{"version":3,"sources":["Components/MainPage/MainPage.js","utilities.js","Components/EpisodeThumb/EpisodeThumb.js","Components/EpisodeDisplay/EpisodeDisplay.js","API/apiCalls.js","Components/MovieThumb/MovieThumb.js","Components/MovieDisplay/MovieDisplay.js","Components/ErrorPage/ErrorPage.js","Components/App/App.js","index.js"],"names":["MainPage","className","to","aria-label","data-value","formatDate","dateInfo","splitDate","substr","split","EpisodeThumb","props","data","title","aired","video_url","episode_id","id","addFavoriteEpisode","favEpisodes","loadLinks","href","target","rel","data-testid","date","isFavorite","find","episode","onClick","EpisodeDisplay","season","useParams","useState","episodes","setEpisodes","getSeasons","useCallback","criteria","mounted","url","determineFetch","fetch","then","response","json","clean","rawData","map","cleanEpisodeData","useEffect","generateLoadingContent","length","index","capFirstLetter","charAt","toUpperCase","slice","formatTitle","loadContent","content","generateSeasonFive","MovieThumb","image_url","rated","start_date","synopsis","mal_id","src","alt","MovieDisplay","movies","setMovies","filterData","results","filter","result","type","includes","display","movie","ErrorPage","App","setFavEpisodes","favEpisode","exact","path","component","render","router","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.acb1a636.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport \"./MainPage.scss\";\n\nconst MainPage = () => {\n  return (\n    <div className=\"div-bg\">\n      <div className=\"season-div\">\n        <Link className=\"link\" to=\"/season1\" aria-label=\"season-one-navigation\">\n          <article className=\"season-card\" data-value=\"season-1\">\n            Season 1\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season2\" aria-label=\"season-two-navigation\">\n          <article className=\"season-card\" data-value=\"season-2\">\n            Season 2\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season3\" aria-label=\"season-three-navigation\">\n          <article className=\"season-card\" data-value=\"season-3\">\n            Season 3\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season4\" aria-label=\"season-four-navigation\">\n          <article className=\"season-card\" data-value=\"season-4\">\n            Season 4\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/season5\" aria-label=\"season-five-navigation\">\n          <article className=\"season-card\" data-value=\"season-5\">\n            Season 5\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/movies\" aria-label=\"movies-navigation\">\n          <article className=\"season-card\" data-value=\"movies\">\n            Movies\n          </article>\n        </Link>\n        <Link className=\"link\" to=\"/favorites\" aria-label=\"favorites-navigation\">\n          <article className=\"season-card\" data-value=\"favorites\">\n            Favorites\n          </article>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default MainPage;\n","export const cleanEpisodeData = (rawData) => {\n  if (!rawData.episodes) {\n    return;\n  }\n  const cleanData = rawData.episodes.map((data) => {\n    return {\n      title: data.title,\n      aired: data.aired,\n      video_url: data.video_url,\n      episode_id: data.episode_id,\n    };\n  });\n  return cleanData;\n};\n\nexport const filterMovieResults = (rawData) => {\n  return rawData.results.filter((result) => {\n    return (\n      result.type === \"Movie\" &&\n      result.title.includes(\"Boku\") &&\n      result.start_date\n    );\n  });\n};\n\nexport const cleanMovieData = (dirtyData) => {\n  return dirtyData.map((data) => {\n    return {\n      image_url: data.image_url,\n      rated: data.rated,\n      start_date: data.start_date,\n      synopsis: data.synopsis,\n      url: data.url,\n      title: data.title,\n      mal_id: data.mal_id,\n    };\n  });\n};\n\nexport const formatTitle = (title) => {\n  const capFirstLetter = title.charAt(0).toUpperCase() + title.slice(1);\n  const date =\n    capFirstLetter.slice(0, 6) +\n    \" \" +\n    capFirstLetter.slice(capFirstLetter.length - 1);\n  return date;\n};\n\nexport const formatDate = (dateInfo) => {\n  if (!dateInfo) {\n    return `Missing Date`;\n  }\n  const isolateDate = dateInfo.substr(0, 10);\n  const splitDate = isolateDate.split(\"-\");\n  const date = `${splitDate[1]}/${splitDate[2]}/${splitDate[0]}`;\n  return date;\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./EpisodeThumb.scss\";\nimport { formatDate } from \"../../utilities\";\n\nconst EpisodeThumb = (props) => {\n  const { title, aired, video_url, episode_id, id } = props.data;\n\n  const { addFavoriteEpisode, favEpisodes } = props\n\n  const generateLink = () => {\n    const externalSite = (\n      <a\n        className=\"external-link\"\n        href={video_url}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        data-testid={episode_id}\n      >\n        More Details...\n      </a>\n    );\n    const decideLink = !video_url ? <p className=\"nolink\">No additional details</p> : externalSite;\n    return decideLink;\n  };\n\n  const loadLinks = generateLink();\n\n  const date = formatDate(aired);\n\n  const isFavorite = favEpisodes && favEpisodes.find(episode => episode.episode_id === episode_id)\n\n  return (\n    <article className=\"episode-thumb\">\n      <div className=\"thumb-div\">\n      <p className=\"episode-id\">Episode #{id}</p>\n      { isFavorite &&  '⭐️ '}\n      </div>\n      <button onClick={() => addFavoriteEpisode(props.data, isFavorite)}>{isFavorite && \"Un-\"}Favorite</button>\n    \n      <h1>{title}</h1>\n      <p className=\"air-date\"><span>Aired on:</span> {date}</p>\n      {loadLinks}\n    </article>\n  );\n};\n\nexport default EpisodeThumb;\n\nEpisodeThumb.propTypes = {\n  title: PropTypes.string,\n  aired: PropTypes.string,\n  video_url: PropTypes.string,\n  episode_id: PropTypes.number,\n  id: PropTypes.number,\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { fetchSeasons } from \"../../API/apiCalls\";\nimport { useParams, Redirect } from \"react-router-dom\";\nimport EpisodeThumb from \"../EpisodeThumb/EpisodeThumb\";\nimport { cleanEpisodeData, formatTitle } from \"../../utilities\";\nimport \"./EpisodeDisplay.scss\";\n\nconst EpisodeDisplay = (props) => {\n  let { season } = useParams();\n\n  const { favEpisodes, addFavoriteEpisode } = props;\n\n  const [episodes, setEpisodes] = useState([]);\n\n  const determineFetch = (url) => {\n    switch (url) {\n      case \"season1\":\n        return \"31964\";\n      case \"season2\":\n        return \"33486\";\n      case \"season3\":\n        return \"36456\";\n      case \"season4\":\n        return \"38408\";\n      case \"season5\":\n        return \"41587\";\n      default:\n    }\n  };\n\n  const getSeasons = useCallback(() => {\n    let mounted = true;\n    fetchSeasons(determineFetch(season)).then((data) => {\n      if (mounted) {\n        const clean = cleanEpisodeData(data);\n        setEpisodes(clean);\n      }\n    });\n    return function cleanup() {\n      mounted = false;\n    };\n  }, [season]);\n\n  useEffect(() => {\n    if (season !== \"favorites\") {\n      getSeasons();\n    }\n  }, [getSeasons, season]);\n\n  const generateEpisodeThumbs = () => {\n    return episodes.map((episode, index) => {\n      return (\n        <EpisodeThumb\n          key={episode.episode_id}\n          data={{ ...episode, id: index + 1 }}\n          addFavoriteEpisode={addFavoriteEpisode}\n          favEpisodes={favEpisodes}\n        />\n      );\n    });\n  };\n\n  const generateLoadingContent = () => {\n    if (!episodes) {\n      return <Redirect to=\"/error\" />;\n    } else if (episodes.length > 0) {\n      return generateEpisodeThumbs();\n    } else {\n      return <h1 className=\"loading-screen\">Loading...</h1>;\n    }\n  };\n\n  const generateSeasonFive = () => {\n    const content = generateLoadingContent();\n    const comingSoon = (\n      <p className=\"coming-soon\">\n        Coming Soon...\n        <br />\n        March 27th, 2021\n      </p>\n    );\n    const decideSeason = season === \"season5\" ? comingSoon : content;\n    return decideSeason;\n  };\n\n  const title = formatTitle(season);\n\n  const generateFavorites = () => {\n    return favEpisodes.map((episode, index) => {\n      return (\n        <EpisodeThumb\n          key={episode.episode_id}\n          data={{ ...episode, id: index + 1 }}\n          addFavoriteEpisode={addFavoriteEpisode}\n          favEpisodes={favEpisodes}\n        />\n      );\n    });\n  }\n\n  const loadContent = season === \"favorites\" ? generateFavorites() : generateSeasonFive(); // or params === favorites\n\n  return (\n    <>\n      <h1 className=\"season-title\">{title}</h1>\n      <div className=\"thumb-container\">{loadContent}</div>\n    </>\n  );\n};\n\nexport default EpisodeDisplay;\n","export const fetchSeasons = (criteria) => {\n    return fetch(`https://api.jikan.moe/v3/anime/${criteria}/episodes`)\n                .then(response => response.json())\n};\n\nexport const fetchMovies = () => {\n    return fetch('https://api.jikan.moe/v3/search/anime?q=myheroacademia')\n                .then(response => response.json())\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./MovieThumb.scss\";\nimport { formatDate } from \"../../utilities\";\n\nconst MovieThumb = (props) => {\n  const {\n    image_url,\n    rated,\n    start_date,\n    synopsis,\n    url,\n    title,\n    mal_id,\n  } = props.data;\n\n  const date = formatDate(start_date);\n\n  return (\n    <article className=\"movie-wrapper\">\n      <img src={image_url} alt=\"movie poster\" />\n      <div className=\"movie-info\">\n        <p className=\"movie-title\">{title}</p>\n        <p className=\"movie-syn\">\n          <span className=\"syn\">Synopsis: </span>\n          <br />\n          {synopsis}\n        </p>\n        <p className=\"rated\">Rated {rated}</p>\n        <p className=\"air-date\">Premiered on {date}</p>\n        <a\n          className=\"external-link\"\n          href={url}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n          data-testid={mal_id}\n        >\n          More Details...\n        </a>\n      </div>\n    </article>\n  );\n};\n\nexport default MovieThumb;\n\nMovieThumb.propTypes = {\n  image_url: PropTypes.string,\n  rated: PropTypes.string,\n  start_date: PropTypes.string,\n  synopsis: PropTypes.string,\n  url: PropTypes.string,\n  title: PropTypes.string,\n  mal_id: PropTypes.number,\n};\n","import React, { useEffect, useState } from \"react\";\nimport { fetchMovies } from \"../../API/apiCalls\";\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\nimport \"./MovieDisplay.scss\";\nimport { filterMovieResults, cleanMovieData } from \"../../utilities\";\n\nconst MovieDisplay = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMovies().then((data) => {\n      const filterData = filterMovieResults(data);\n      const clean = cleanMovieData(filterData);\n      setMovies(clean);\n    });\n  }, []);\n\n  const generateMovieThumbs = () => {\n    return movies.map((movie, index) => {\n      return <MovieThumb key={index} data={movie} />;\n    });\n  };\n\n  const display = generateMovieThumbs();\n\n  return <section className=\"movie-section\">{display}</section>;\n};\n\nexport default MovieDisplay;\n","import React from \"react\";\nimport \"./ErrorPage.scss\";\n\nconst ErrorPage = () => {\n  return (\n    <div className=\"error\">\n      <p>Page Not Found</p>\n    </div>\n  );\n};\n\nexport default ErrorPage;\n","import React, { useState } from \"react\";\nimport MainPage from \"../MainPage/MainPage\";\nimport \"./App.scss\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport EpisodeDisplay from \"../EpisodeDisplay/EpisodeDisplay\";\nimport MovieDisplay from \"../MovieDisplay/MovieDisplay\";\nimport ErrorPage from \"../ErrorPage/ErrorPage\";\n\nconst App = () => {\n  const [favEpisodes, setFavEpisodes] = useState([]);\n\n  const addFavoriteEpisode = (episode, isFavorite) => {\n    if (isFavorite) {\n      setFavEpisodes(\n        favEpisodes.filter(\n          (favEpisode) => favEpisode.episode_id !== episode.episode_id\n        )\n      );\n    } else {\n      setFavEpisodes([...favEpisodes, episode]);\n    }\n  };\n\n  return (\n    <>\n      <Link className=\"title-link\" to=\"/\">\n        <h1 className=\"title\">\n          <span className=\"title-span\">ANIMEtrics</span>\n          <br />\n          <span className=\"sub-title\">For My Hero Academia Fanatics</span>\n        </h1>\n      </Link>\n      <Switch>\n        <Route exact path=\"/\" component={MainPage} />\n        <Route exact path=\"/animetrics\" component={MainPage} />\n        <Route exact path=\"/movies\" component={MovieDisplay} />\n        <Route exact path=\"/error\" component={ErrorPage} />\n        <Route\n          path=\"/:season\"\n          render={() => {\n            return (\n              <EpisodeDisplay\n                favEpisodes={favEpisodes}\n                addFavoriteEpisode={addFavoriteEpisode}\n              />\n            );\n          }}\n        />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './Components/App/App';\n\nconst router = <BrowserRouter><App /></BrowserRouter>\n\nReactDOM.render(\n  router,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}